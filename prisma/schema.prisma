// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  phoneNumber  String?
  email        String  @unique
  password     String
  isActive     Boolean @default(false)
  profile          Profile?        @relation("UserProfile", fields: [profileid], references: [id])
  profileid String?
  roles            Role[]          @relation("UserRoles")
}


model Profile {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  firstName   String?
  middleName  String?
  lastName    String?
  dateOfBirth DateTime?
  picture     String?

  User User[] @relation("UserProfile")

  @@map("profiles")

}

model Role {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  roleName    String  @unique
  description String?
  isActive    Boolean @default(true)

  user        User[]       @relation("UserRoles")
  permissions Permission[] @relation("RolePermissions")

  createdByUserId String?
  // createdBy       User?   @relation(fields: [createdByUserId], references: [id], name: "role_created_by")
  updatedByUserId String?
  // updatedBy       User?   @relation(fields: [updatedByUserId], references: [id], name: "role_updated_by")

  @@map("roles")
}

model Permission {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  permissionName String  @unique
  isActive       Boolean @default(true)

  role Role[] @relation("RolePermissions")

  createdByUserId String?
  // createdBy       User?   @relation(fields: [createdByUserId], references: [id], name: "permission_created_by")
  updatedByUserId String?
  // updatedBy       User?   @relation(fields: [updatedByUserId], references: [id], name: "permission_updated_by")

  @@map("permissions")
}